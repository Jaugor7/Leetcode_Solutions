https://leetcode.com/problems/binary-tree-right-side-view/submissions/

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<Integer> rightSideView(TreeNode root) {
        if(root == null) return new ArrayList();
        
        Map<Integer, Integer> map = new HashMap<>();
        
        Queue<TreeNode> q = new LinkedList<>();
        
        int level = 0;
        q.add(root);
        
        while(!q.isEmpty())
        {
            int size = q.size();
            for(int i=0; i < size; i++)
            {
                TreeNode curr = q.poll();
                
                if(curr.left != null)q.add(curr.left);
                if(curr.right != null)q.add(curr.right);
                
                if(i == size-1)
                    map.put(level, curr.val);
            }
            
            level++;
        }
        
        List<Integer> res = new ArrayList<>();
        for(Map.Entry<Integer,Integer> entry: map.entrySet())
        {
            res.add(entry.getValue());
        }
        
        return res;
        
    }
}
