https://leetcode.com/problems/merge-k-sorted-lists/submissions/

/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode mergeKLists(ListNode[] lists) 
    {
        if(lists.length == 0) return null;
        PriorityQueue<ListNode> minHeap = new PriorityQueue<>((a, b) -> a.val-b.val);
        
        for(ListNode node: lists)
            if(node != null)
                minHeap.add(node);
        
        ListNode head = null, curr = null;
        
        while(!minHeap.isEmpty())
        {
            ListNode currNode = minHeap.poll();
            
            if(currNode.next != null)
                minHeap.add(currNode.next);
            
            if(head == null)
            {
                head = currNode;
                curr = head;
            }
            else
            {
                curr.next = currNode;
                curr = curr.next;
            }
        }
        
        return head;
    }
}