https://leetcode.com/problems/jump-game-iii/submissions/


class Solution {
    public int recur(int[] arr, int index, int[] dp, boolean[] visited)
    {
        if(index < 0 || index >= arr.length)
            return -1;
        if(arr[index] == 0)
            return 1;
        if(dp[index] != 0)
            return dp[index];
        
        if(!visited[index])
        {
            visited[index] = true;

            int n1 = recur(arr, index + arr[index], dp, visited);
            int n2 = recur(arr, index - arr[index], dp, visited);

            dp[index] = (n1 == 1 || n2 == 1)? 1 : -1;
            return dp[index];
        }
        else
            return -1;
    }
    public boolean canReach(int[] arr, int start) 
    {
        int[] dp = new int[arr.length+1];
        boolean[] visited = new boolean[arr.length];
        int res = recur(arr, start, dp, visited) ;
        return (res==1);
    }
}
