https://leetcode.com/problems/top-k-frequent-elements/submissions/

class Solution {
    public int[] topKFrequent(int[] nums, int k) {
        int[] res = new int[k];
        
        Map<Integer, Integer> hm = new HashMap<>();
        
        PriorityQueue<Map.Entry<Integer,Integer>> minHeap = new PriorityQueue<Map.Entry<Integer,Integer>>((a, b) -> a.getValue() - b.getValue());
        
        for(int i = 0; i < nums.length; i++)
            hm.put(nums[i], hm.getOrDefault(nums[i], 0)+1);
        
        for(HashMap.Entry<Integer, Integer> entry : hm.entrySet())
        {
            minHeap.add(entry);
            if(minHeap.size() > k)
                minHeap.poll();
        }
        
        int i = 0;
        while(!minHeap.isEmpty())
        {
            res[i++] = minHeap.poll().getKey();
        }
        return res;
    }
}
