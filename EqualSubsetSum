https://leetcode.com/problems/partition-equal-subset-sum/submissions/

class Solution {
    public boolean canPartition(int[] nums) 
    {
        int sum = 0;
        for(int x: nums)
            sum += x;
        
        if(sum%2 != 0)
            return false;
        
        int[][] dp = new int[nums.length+1][(sum/2)+1];
        
        return (recur(nums, 0, sum/2, dp) == 1);
    }
    
    public int recur(int[] nums, int index, int sum, int[][] dp)
    {
        if(sum < 0 || index >= nums.length)
            return -1;
        else if(sum == 0)
            return 1;
        
        if(dp[index][sum] != 0)
            return dp[index][sum];
        
        int n1 = recur(nums, index+1, sum-nums[index], dp);
        int n2 = recur(nums, index+1, sum, dp);
        if(n1 == 1 || n2 == 1)
            dp[index][sum] = 1;
        else
            dp[index][sum] = -1;
        return dp[index][sum];
    }
}
