https://leetcode.com/problems/minimum-path-sum/submissions/

class Solution {
    public int recur(int[][] grid, int m, int n, int[][] dp)
    {
        if(n == 0 && m == 0)
            return grid[m][n];
        if(m < 0 || n < 0)
            return Integer.MAX_VALUE;
        
        if(dp[m][n] != 0)
            return dp[m][n];
        
        dp[m][n] = grid[m][n]+Math.min(recur(grid, m-1, n, dp), recur(grid, m , n-1, dp));
        return dp[m][n];
    }
    public int minPathSum(int[][] grid) 
    {
        int m = grid.length;
        int n = grid[0].length;
        int[][] dp = new int[m][n];
        
        int res = recur(grid, m-1 , n-1, dp);
        return res;
        
    }
}
